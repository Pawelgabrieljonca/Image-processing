import org.opencv.core.*;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;

public class Main {
    static { System.loadLibrary(Core.NATIVE_LIBRARY_NAME); }

    public static void main(String[] args) {
        Mat img = Imgcodecs.imread("women.png", Imgcodecs.IMREAD_GRAYSCALE);

        if (img.empty()) {
            System.out.println("Failed to load image.");
            return;
        }
        // Binaryzacja obrazu
        Mat binaryImg = new Mat();
        Imgproc.threshold(img, binaryImg, 127, 255, Imgproc.THRESH_BINARY);

        // Definicje rozmiarów i kształtów elementów strukturalnych
        Size[] sizes = {new Size(3, 3), new Size(5, 5)};
        int[] shapes = {Imgproc.MORPH_RECT, Imgproc.MORPH_ELLIPSE, Imgproc.MORPH_CROSS};

        // Liczba powtórzeń erozji
        int numErosions = 3;
        // Wykonaj wielokrotną erozję dla różnych elementów strukturalnych i zapisz wyniki
        for (Size size : sizes) {
            for (int shape : shapes) {
                Mat element = Imgproc.getStructuringElement(shape, size);
                Mat erodedImg = binaryImg.clone();
                // Powtórzona erozja
                for (int i = 0; i < numErosions; i++) {
                    Imgproc.erode(erodedImg, erodedImg, element);
                }
                // Zapisanie wyniku do pliku
                String outputFilename = String.format("eroded_shape%d_size%.0fx%.0f_repetitions%d.png", shape, size.width, size.height, numErosions);
                Imgcodecs.imwrite(outputFilename, erodedImg);
                System.out.println("Zapisano: " + outputFilename);
            }
        }
    }
}
